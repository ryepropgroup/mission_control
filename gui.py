# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QPixmap
from PyQt5.QtCore import QTime, QTimer, QDate, Qt

#from linearGauge file to add linear gauge custom widgets
from updated_gauge import LinearGauge


from verticaltempgauge import VerticalTempLinearGauge
from functools import partial

#allow different parts of the program to run concurrently 
import threading

#impot time module to allow python to work with time
import time

#allowing us to work with JSON data
import json






import socket
PORT = 6969





import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QWidget
from PyQt5.QtCore import Qt, QRect, QBasicTimer, QPoint , QThread, pyqtSignal
from PyQt5.QtGui import QPainter, QPen, QFont, QColor, QPolygon


class WorkerThread(QThread):
    json_data_rec = pyqtSignal(object)

    def __init__(self):
        QThread.__init__(self)

    
    def run(self):
        
        while True:
            data = b''  # Initialize an empty byte string to store the received data
            
            while True:
                
                chunk = s.recv(1024)  # Receive data in chunks of 1024 bytes
                data += chunk  # Append the received data to the existing data

                if b'\n' in chunk:
                    break  # Break the loop when a newline character is received
            #find index of new line
            data = data.decode('utf-8')  # Convert the byte string to a Unicode string
            index = data.index('\n')
            #trunicate
            json_data = data[:index].strip()
            self.json_data_rec.emit(json_data)
            

class Ui_MainWindow(object):
    #pwr off all buttoin 
    #valve seq
    def __init__(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1440, 872)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.p_and_id = QtWidgets.QLabel(self.centralwidget)
        self.p_and_id.setGeometry(QtCore.QRect(0, 0, 1441, 831))
        image = QPixmap('pg.png')
        self.p_and_id.setPixmap(image)
        self.p_and_id.setScaledContents(True)
        self.p_and_id.setObjectName("p_and_id")

        self.mach_logo = QtWidgets.QLabel(self.centralwidget)
        self.mach_logo.setGeometry(QtCore.QRect(10, 10, 281, 201))
        self.mach_logo.setText("")
        self.mach_logo.setPixmap(QtGui.QPixmap("mach_logo.png"))
        self.mach_logo.setScaledContents(True)
        self.mach_logo.setObjectName("mach_logo")


        #200, 330, 100, 60
        self.pwr_off = QtWidgets.QPushButton(self.centralwidget)
        self.pwr_off.setGeometry(QtCore.QRect(130, 600, 90, 55))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(18)
        self.pwr_off.setFont(font)
        self.pwr_off.setObjectName("time_label")
        self.pwr_off.setStyleSheet("QPushButton { background-color: #2ab7ca; color: white; }" "QPushButton:pressed { background-color: #011f4b; }")
        self.pwr_off.setText("ABORT")
        self.pwr_off.clicked.connect(self.power_off_all)


        self.start_valve_seq = QtWidgets.QPushButton(self.centralwidget)
        self.start_valve_seq.setGeometry(QtCore.QRect(20, 600, 90, 55))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(16)
        self.start_valve_seq.setFont(font)
        self.start_valve_seq.setObjectName("time_label")
        self.start_valve_seq.setStyleSheet("QPushButton { background-color: #ffcc5c; color: white; }" "QPushButton:pressed { background-color: #ffeead; }")
        self.start_valve_seq.clicked.connect(self.valve_seq)


        self.stack_light_blue = QtWidgets.QPushButton(self.centralwidget)
        self.stack_light_blue.setGeometry(QtCore.QRect(30, 745, 70, 55))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(18)
        self.stack_light_blue.setFont(font)
        self.stack_light_blue.setObjectName("blue")
        self.stack_light_blue.setStyleSheet("QPushButton { background-color: blue; color: white; }")
    
        #self.stack_light_blue.clicked.connect(self.power_off_all)


        self.stack_light_green = QtWidgets.QPushButton(self.centralwidget)
        self.stack_light_green.setGeometry(QtCore.QRect(120, 745, 70, 55))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(18)
        self.stack_light_green.setFont(font)
        self.stack_light_green.setObjectName("GREEM")
        self.stack_light_green.setStyleSheet("QPushButton { background-color: #05c817; color: white; }")
        #self.stack_light_blue.clicked.connect(self.power_off_all)


        self.stack_light_yellow = QtWidgets.QPushButton(self.centralwidget)
        self.stack_light_yellow.setGeometry(QtCore.QRect(30, 679, 70, 55))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(18)
        self.stack_light_yellow.setFont(font)
        self.stack_light_yellow.setObjectName("yeellers")
        self.stack_light_yellow.setStyleSheet("QPushButton { background-color: #9e5e10; color: white; }")
        #self.stack_light_blue.clicked.connect(self.power_off_all)


        self.stack_light_red = QtWidgets.QPushButton(self.centralwidget)
        self.stack_light_red.setGeometry(QtCore.QRect(120, 679, 70, 55))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(18)
        self.stack_light_red.setFont(font)
        self.stack_light_red.setObjectName("reddeadredemption")
        self.stack_light_red.setStyleSheet("QPushButton { background-color: #ad1d1d; color: white; }" )
        #self.stack_light_blue.clicked.connect(self.power_off_all)


        

        
        
        self.pad_s = QtWidgets.QPushButton(self.centralwidget)
        self.pad_s.setGeometry(QtCore.QRect(300, 710, 90, 55))
        self.pad_s.setCheckable(True)
        self.pad_s.toggle()
        self.pad_s.setText("SAFE")
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(14)
        self.pad_s.setFont(font)
        self.pad_s.clicked.connect(lambda: self.pad_state_set(self.pad_s))
        self.pad_s.setStyleSheet("QPushButton { background-color: grey; color: white; }")



       

        


            
      
       
        # self.close_all = QtWidgets.QPushButton(self.centralwidget)
        # self.close_all.setGeometry(QtCore.QRect(400, 200, 90, 55))
        # font = QtGui.QFont()
        # font.setFamily("Helvetica")
        # font.setPointSize(10)
        # self.close_all.setFont(font)
        # self.close_all.setObjectName("time_label")
        # self.close_all.setStyleSheet("QPushButton { background-color: #ffcc5c; color: white; }" "QPushButton:pressed { background-color: #ffeead; }")
        # self.close_all.clicked.connect(self.open_all_valves)




        


        #Valve 10 sb open, close, and state
        self.V10_SB_open = QtWidgets.QPushButton(self.centralwidget)
        self.V10_SB_open.setGeometry(QtCore.QRect(344, 286, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V10_SB_open.setFont(font)
        self.V10_SB_open.setObjectName("V10_SB_open")
        self.V10_SB_open.setStyleSheet("QPushButton { background-color: #12b81b; color: white; }" "QPushButton:pressed { background-color: #074d05; }")
        self.V10_SB_open.clicked.connect(lambda: self.open_valve(b"V10_open\n"))

        self.V10_SB_close = QtWidgets.QPushButton(self.centralwidget)
        self.V10_SB_close.setGeometry(QtCore.QRect(344, 310, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V10_SB_close.setFont(font)
        self.V10_SB_close.setObjectName("V10_SB_close")
        self.V10_SB_close.setStyleSheet("QPushButton { background-color: red; color: white; }" "QPushButton:pressed { background-color: #4d0505; }")
        self.V10_SB_close.clicked.connect(lambda: self.close_valve(b"V10_close\n"))
        self.V10_SB_state = QtWidgets.QLabel(self.centralwidget)
    
        font.setFamily("Helvetica")
        font.setPointSize(24)
        
        self.V10_SB_state.setFont(font)
        self.V10_SB_state.setAlignment(QtCore.Qt.AlignCenter)
        self.V10_SB_state.setObjectName("Current State")
        self.V10_SB_state.setStyleSheet("color: blue; font-size: 16px;")   
        self.V10_SB_state = QtWidgets.QLabel(self.centralwidget)
        self.V10_SB_state.setGeometry(QtCore.QRect(342, 260, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(24)
        self.V10_SB_state.setFont(font)
        self.V10_SB_state.setAlignment(QtCore.Qt.AlignCenter)
        self.V10_SB_state.setObjectName("Current State")
        self.V10_SB_state.setStyleSheet("color: blue; font-size: 16px;")


        #v11 s no open, close, and state
        self.V11_S_NO_open = QtWidgets.QPushButton(self.centralwidget)
        self.V11_S_NO_open.setGeometry(QtCore.QRect(218, 488, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V11_S_NO_open.setFont(font)
        self.V11_S_NO_open.setObjectName("V11_S_NO_open")
        self.V11_S_NO_open.setStyleSheet("QPushButton { background-color: #12b81b; color: white; }" "QPushButton:pressed { background-color: #074d05; }")
        self.V11_S_NO_open.clicked.connect(lambda: self.open_valve(b"V11_NO_open\n"))
        self.V11_S_NO_close = QtWidgets.QPushButton(self.centralwidget)
        self.V11_S_NO_close.setGeometry(QtCore.QRect(218, 512, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V11_S_NO_close.setFont(font)
        self.V11_S_NO_close.setObjectName("V11_S_NO_close")
        self.V11_S_NO_close.setStyleSheet("QPushButton { background-color: red; color: white; }" "QPushButton:pressed { background-color: #4d0505; }")
        self.V11_S_NO_close.clicked.connect(lambda: self.close_valve(b"V11_NO_close\n"))
        self.V11_S_NO_state = QtWidgets.QLabel(self.centralwidget)
        self.V11_S_NO_state.setGeometry(QtCore.QRect(220, 540, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(24)
        self.V11_S_NO_state.setFont(font)
        self.V11_S_NO_state.setAlignment(QtCore.Qt.AlignCenter)
        self.V11_S_NO_state.setObjectName("Current State")
        self.V11_S_NO_state.setStyleSheet("color: blue; font-size: 16px;")


        #v12_s_no open, close, and state
        self.V12_S_NO_open = QtWidgets.QPushButton(self.centralwidget)
        self.V12_S_NO_open.setGeometry(QtCore.QRect(347, 488, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V12_S_NO_open.setFont(font)
        self.V12_S_NO_open.setObjectName("V12_S_NO_open")
        self.V12_S_NO_open.setStyleSheet("QPushButton { background-color: #12b81b; color: white; }""QPushButton:pressed { background-color: #074d05; }")
        self.V12_S_NO_open.clicked.connect(lambda: self.open_valve(b"V12_NO_open\n"))
        self.V12_S_NO_close = QtWidgets.QPushButton(self.centralwidget)
        self.V12_S_NO_close.setGeometry(QtCore.QRect(347, 512, 71, 21))
        self.V12_S_NO_close.setObjectName("V12_S_NO_close")
        self.V12_S_NO_close.setStyleSheet("QPushButton { background-color: red; color: white; }" "QPushButton:pressed { background-color: #4d0505; }")
        self.V12_S_NO_close.clicked.connect(lambda: self.close_valve(b"V12_NO_close\n"))
        self.V12_S_state = QtWidgets.QLabel(self.centralwidget)
        self.V12_S_state.setGeometry(QtCore.QRect(349, 540, 71, 21))
        font.setFamily("Helvetica")
        font.setPointSize(24)
        self.V12_S_state.setFont(font)
        self.V12_S_state.setAlignment(QtCore.Qt.AlignCenter)
        self.V12_S_state.setObjectName("Current State")
        self.V12_S_state.setStyleSheet("color: blue; font-size: 16px;") 

        
    
        self.V20_SB_open = QtWidgets.QPushButton(self.centralwidget)
        self.V20_SB_open.setGeometry(QtCore.QRect(1070, 150, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V20_SB_open.setFont(font)
        self.V20_SB_open.setObjectName("V20_SB_open")
        self.V20_SB_open.setStyleSheet("QPushButton { background-color: #12b81b; color: white; }""QPushButton:pressed { background-color: #074d05; }")
        self.V20_SB_open.clicked.connect(lambda: self.open_valve(b"V20_open\n"))
        self.V20_SB_close = QtWidgets.QPushButton(self.centralwidget)
        self.V20_SB_close.setGeometry(QtCore.QRect(1070, 174, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V20_SB_close.setFont(font)
        self.V20_SB_close.setObjectName("V20_SB_close")
        self.V20_SB_close.setStyleSheet("QPushButton { background-color: red; color: white; }" "QPushButton:pressed { background-color: #4d0505; }")
        self.V20_SB_close.clicked.connect(lambda: self.close_valve(b"V20_close\n"))
        self.V20_SB_state = QtWidgets.QLabel(self.centralwidget)
        self.V20_SB_state.setGeometry(QtCore.QRect(1070, 120, 71, 21))
        font.setFamily("Helvetica")
        font.setPointSize(24)
        self.V20_SB_state.setFont(font)
        self.V20_SB_state.setAlignment(QtCore.Qt.AlignCenter)
        self.V20_SB_state.setObjectName("Current State")
        self.V20_SB_state.setStyleSheet("color: blue; font-size: 16px;") 


        self.V21_MB_open = QtWidgets.QPushButton(self.centralwidget)
        self.V21_MB_open.setGeometry(QtCore.QRect(556, 318, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V21_MB_open.setFont(font)
        self.V21_MB_open.setObjectName("V21_MB_open")
        self.V21_MB_open.setStyleSheet("QPushButton { background-color: #12b81b; color: white; }""QPushButton:pressed { background-color: #074d05; }")
        self.V21_MB_open.clicked.connect(lambda: self.open_valve(b"V21_open\n"))
        self.V21_MB_close = QtWidgets.QPushButton(self.centralwidget)
        self.V21_MB_close.setGeometry(QtCore.QRect(556, 343, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V21_MB_close.setFont(font)
        self.V21_MB_close.setObjectName("V21_MB_close")
        self.V21_MB_close.setStyleSheet("QPushButton { background-color: red; color: white; }" "QPushButton:pressed { background-color: #4d0505; }")
        self.V21_MB_close.clicked.connect(lambda: self.close_valve(b"V21_close\n"))
        self.V21_MB_state = QtWidgets.QLabel(self.centralwidget)
        self.V21_MB_state.setGeometry(QtCore.QRect(555, 370, 71, 21))
        font.setFamily("Helvetica")
        font.setPointSize(24)
        self.V21_MB_state.setFont(font)
        self.V21_MB_state.setAlignment(QtCore.Qt.AlignCenter)
        self.V21_MB_state.setObjectName("Current State")
        self.V21_MB_state.setStyleSheet("color: blue; font-size: 16px;") 




        self.V22_SB_NO_open = QtWidgets.QPushButton(self.centralwidget)
        self.V22_SB_NO_open.setGeometry(QtCore.QRect(889, 47, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V22_SB_NO_open.setFont(font)
        self.V22_SB_NO_open.setObjectName("V22_SB_NO_open")
        self.V22_SB_NO_open.setStyleSheet("QPushButton { background-color: #12b81b; color: white; }""QPushButton:pressed { background-color: #074d05; }")
        self.V22_SB_NO_open.clicked.connect(lambda: self.open_valve(b"V22_NO_open\n"))
        self.V22_SB_NO_close = QtWidgets.QPushButton(self.centralwidget)
        self.V22_SB_NO_close.setGeometry(QtCore.QRect(889, 71, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V22_SB_NO_close.setFont(font)
        self.V22_SB_NO_close.setObjectName("V22_SB_NO_close")
        self.V22_SB_NO_close.setStyleSheet("QPushButton { background-color: red; color: white; }" "QPushButton:pressed { background-color: #4d0505; }")
        self.V22_SB_NO_close.clicked.connect(lambda: self.close_valve(b"V22_NO_close\n"))

        self.V22_SB_NO_state = QtWidgets.QLabel(self.centralwidget)
        self.V22_SB_NO_state.setGeometry(QtCore.QRect(890, 20, 71, 21))
        font.setFamily("Helvetica")
        font.setPointSize(24)
        self.V22_SB_NO_state.setFont(font)
        self.V22_SB_NO_state.setAlignment(QtCore.Qt.AlignCenter)
        self.V22_SB_NO_state.setObjectName("Current State")
        self.V22_SB_NO_state.setStyleSheet("color: blue; font-size: 16px;") 

        self.V23_SB_NO_open = QtWidgets.QPushButton(self.centralwidget)
        self.V23_SB_NO_open.setGeometry(QtCore.QRect(692, 146, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V23_SB_NO_open.setFont(font)
        self.V23_SB_NO_open.setObjectName("V23_SB__NO_open")
        self.V23_SB_NO_open.setStyleSheet("QPushButton { background-color: #12b81b; color: white; }" "QPushButton:pressed { background-color: #074d05; }")
        self.V23_SB_NO_open.clicked.connect(lambda: self.open_valve(b"V23_NO_open\n"))
        self.V23_SB_NO_close = QtWidgets.QPushButton(self.centralwidget)
        self.V23_SB_NO_close.setGeometry(QtCore.QRect(692, 170, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V23_SB_NO_close.setFont(font)
        self.V23_SB_NO_close.setObjectName("V23_SB_NO_close")
        self.V23_SB_NO_close.setStyleSheet("QPushButton { background-color: red; color: white; }" "QPushButton:pressed { background-color: #4d0505; }")
        self.V23_SB_NO_close.clicked.connect(lambda: self.close_valve(b"V23_NO_close\n"))
        self.V23_SB_state = QtWidgets.QLabel(self.centralwidget)
        self.V23_SB_state.setGeometry(QtCore.QRect(690, 120, 71, 21))
        font.setFamily("Helvetica")
        font.setPointSize(24)
        self.V23_SB_state.setFont(font)
        self.V23_SB_state.setAlignment(QtCore.Qt.AlignCenter)
        self.V23_SB_state.setObjectName("Current State")
        self.V23_SB_state.setStyleSheet("color: blue; font-size: 16px;") 
       
        self.V30_SB_open = QtWidgets.QPushButton(self.centralwidget)
        self.V30_SB_open.setGeometry(QtCore.QRect(1070, 496, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V30_SB_open.setFont(font)
        self.V30_SB_open.setObjectName("V30_SB_open")
        self.V30_SB_open.setStyleSheet("QPushButton { background-color: #12b81b; color: white; }""QPushButton:pressed { background-color: #074d05; }")
        self.V30_SB_open.clicked.connect(lambda: self.open_valve(b"V30_open\n"))
        self.V30_SB_close = QtWidgets.QPushButton(self.centralwidget)
        self.V30_SB_close.setGeometry(QtCore.QRect(1070, 520, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V30_SB_close.setFont(font)
        self.V30_SB_close.setObjectName("V30_SB_close")
        self.V30_SB_close.setStyleSheet("QPushButton { background-color: red; color: white; }""QPushButton:pressed { background-color: #4d0505; }")
        self.V30_SB_close.clicked.connect(lambda: self.close_valve(b"V30_close\n"))
        self.V30_SB_state = QtWidgets.QLabel(self.centralwidget)
        self.V30_SB_state.setGeometry(QtCore.QRect(1070, 470, 71, 21))
        font.setFamily("Helvetica")
        font.setPointSize(24)
        self.V30_SB_state.setFont(font)
        self.V30_SB_state.setAlignment(QtCore.Qt.AlignCenter)
        self.V30_SB_state.setObjectName("Current State")
        self.V30_SB_state.setStyleSheet("color: blue; font-size: 16px;") 


        self.V31_MB_open = QtWidgets.QPushButton(self.centralwidget)
        self.V31_MB_open.setGeometry(QtCore.QRect(442, 648, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V31_MB_open.setFont(font)
        self.V31_MB_open.setObjectName("V31_MB_open")
        self.V31_MB_open.setStyleSheet("QPushButton { background-color: #12b81b; color: white; }""QPushButton:pressed { background-color: #074d05; }")
        self.V31_MB_open.clicked.connect(lambda: self.open_valve(b"V31_open\n"))
        self.V31_MB_close = QtWidgets.QPushButton(self.centralwidget)
        self.V31_MB_close.setGeometry(QtCore.QRect(442, 671 , 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V31_MB_close.setFont(font)
        self.V31_MB_close.setObjectName("V30_MB_close")
        self.V31_MB_close.setStyleSheet("QPushButton { background-color: red; color: white; }""QPushButton:pressed { background-color: #4d0505; }")
        self.V31_MB_close.clicked.connect(lambda: self.close_valve(b"V31_close\n"))
        self.V31_MB_state = QtWidgets.QLabel(self.centralwidget)
        self.V31_MB_state.setGeometry(QtCore.QRect(440, 700, 71, 21))
        font.setFamily("Helvetica")
        font.setPointSize(24)
        self.V31_MB_state.setFont(font)
        self.V31_MB_state.setAlignment(QtCore.Qt.AlignCenter)
        self.V31_MB_state.setObjectName("Current State")
        self.V31_MB_state.setStyleSheet("color: blue; font-size: 16px;") 



        self.V32_S_open = QtWidgets.QPushButton(self.centralwidget)
        self.V32_S_open.setGeometry(QtCore.QRect(556, 481, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V32_S_open.setFont(font)
        self.V32_S_open.setObjectName("V32_S_open")
        self.V32_S_open.setStyleSheet("QPushButton { background-color: #12b81b; color: white; }""QPushButton:pressed { background-color: #074d05; }")
        self.V32_S_open.clicked.connect(lambda: self.open_valve(b"V32_open\n"))
        self.V32_S_close = QtWidgets.QPushButton(self.centralwidget)
        self.V32_S_close.setGeometry(QtCore.QRect(556, 505 , 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V32_S_close.setFont(font)
        self.V32_S_close.setObjectName("V32_S_close")
        self.V32_S_close.setStyleSheet("QPushButton { background-color: red; color: white; }""QPushButton:pressed { background-color: #4d0505; }")
        self.V32_S_close.clicked.connect(lambda: self.close_valve(b"V32_close\n"))
        self.V32_S_state = QtWidgets.QLabel(self.centralwidget)
        self.V32_S_state.setGeometry(QtCore.QRect(560, 455, 71, 21))
        font.setFamily("Helvetica")
        font.setPointSize(24)
        self.V32_S_state.setFont(font)
        self.V32_S_state.setAlignment(QtCore.Qt.AlignCenter)
        self.V32_S_state.setObjectName("Current State")
        self.V32_S_state.setStyleSheet("color: blue; font-size: 16px;") 



        self.V33_SB_NO_open = QtWidgets.QPushButton(self.centralwidget)
        self.V33_SB_NO_open.setGeometry(QtCore.QRect(803, 498, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V33_SB_NO_open.setFont(font)
        self.V33_SB_NO_open.setObjectName("V33_SB_NO_open")
        self.V33_SB_NO_open.setStyleSheet("QPushButton { background-color: #12b81b; color: white; }""QPushButton:pressed { background-color: #074d05; }")
        self.V33_SB_NO_open.clicked.connect(lambda: self.open_valve(b"V33_NO_open\n"))
        self.V33_SB_NO_close = QtWidgets.QPushButton(self.centralwidget)
        self.V33_SB_NO_close.setGeometry(QtCore.QRect(803, 522 , 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V33_SB_NO_close.setFont(font)
        self.V33_SB_NO_close.setObjectName("V30_SB_NO_close")
        self.V33_SB_NO_close.setStyleSheet("QPushButton { background-color: red; color: white; }""QPushButton:pressed { background-color: #4d0505; }")
        self.V33_SB_NO_close.clicked.connect(lambda: self.close_valve(b"V33_NO_close\n"))
        self.V33_SB_NO_state = QtWidgets.QLabel(self.centralwidget)
        self.V33_SB_NO_state.setGeometry(QtCore.QRect(800, 550, 71, 21))
        font.setFamily("Helvetica")
        font.setPointSize(24)
        self.V33_SB_NO_state.setFont(font)
        self.V33_SB_NO_state.setAlignment(QtCore.Qt.AlignCenter)
        self.V33_SB_NO_state.setObjectName("Current State")
        self.V33_SB_NO_state.setStyleSheet("color: blue; font-size: 16px;") 
  


        
        self.V34_S_open = QtWidgets.QPushButton(self.centralwidget)
        self.V34_S_open.setGeometry(QtCore.QRect(663, 387, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V34_S_open.setFont(font)
        self.V34_S_open.setObjectName("V34_S_open")
        self.V34_S_open.setStyleSheet("QPushButton { background-color: #12b81b; color: white; }""QPushButton:pressed { background-color: #074d05; }")
        self.V34_S_open.clicked.connect(lambda: self.open_valve(b"V34_open\n"))
        self.V34_S_close = QtWidgets.QPushButton(self.centralwidget)
        self.V34_S_close.setGeometry(QtCore.QRect(663, 410, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V34_S_close.setFont(font)
        self.V34_S_close.setObjectName("V34_S_close")
        self.V34_S_close.setStyleSheet("QPushButton { background-color: red; color: white; }" "QPushButton:pressed { background-color: #4d0505; }")
        self.V34_S_close.clicked.connect(lambda: self.close_valve(b"V34_close\n"))
        self.V34_S_state = QtWidgets.QLabel(self.centralwidget)
        self.V34_S_state.setGeometry(QtCore.QRect(660, 360, 71, 21))
        font.setFamily("Helvetica")
        font.setPointSize(24)
        self.V34_S_state.setFont(font)
        self.V34_S_state.setAlignment(QtCore.Qt.AlignCenter)
        self.V34_S_state.setObjectName("Current State")
        self.V34_S_state.setStyleSheet("color: blue; font-size: 16px;") 



        

       



       

        self.V35_SB_NO_open = QtWidgets.QPushButton(self.centralwidget)
        self.V35_SB_NO_open.setGeometry(QtCore.QRect(553, 695, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V35_SB_NO_open.setFont(font)
        self.V35_SB_NO_open.setObjectName("V35_SB_NO_open")
        self.V35_SB_NO_open.setStyleSheet("QPushButton { background-color: #12b81b; color: white; }" "QPushButton:pressed { background-color: #074d05; }")
        self.V35_SB_NO_open.clicked.connect(lambda: self.open_valve(b"V35_NO_open\n")) 
        self.V35_SB_NO_close = QtWidgets.QPushButton(self.centralwidget)
        self.V35_SB_NO_close.setGeometry(QtCore.QRect(553, 719, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V35_SB_NO_close.setFont(font)
        self.V35_SB_NO_close.setObjectName("V35_SB_NO_close")
        self.V35_SB_NO_close.setStyleSheet("QPushButton { background-color: red; color: white; }" "QPushButton:pressed { background-color: #4d0505; }")
        self.V35_SB_NO_close.clicked.connect(lambda: self.close_valve(b"V35_NO_close\n"))
        self.V35_SB_NO_state = QtWidgets.QLabel(self.centralwidget)
        self.V35_SB_NO_state.setGeometry(QtCore.QRect(550, 750, 71, 21))
        font.setFamily("Helvetica")
        font.setPointSize(24)
        self.V35_SB_NO_state.setFont(font)
        self.V35_SB_NO_state.setAlignment(QtCore.Qt.AlignCenter)
        self.V35_SB_NO_state.setObjectName("Current State")
        self.V35_SB_NO_state.setStyleSheet("color: blue; font-size: 16px;") 




        self.V36_S_open = QtWidgets.QPushButton(self.centralwidget)
        self.V36_S_open.setGeometry(QtCore.QRect(715, 702, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V36_S_open.setFont(font)
        self.V36_S_open.setObjectName("V36_SB_open")
        self.V36_S_open.setStyleSheet("QPushButton { background-color: #12b81b; color: white; }" "QPushButton:pressed { background-color: #074d05; }")
        self.V36_S_open.clicked.connect(lambda: self.open_valve(b"V36_open\n"))
        self.V36_S_close = QtWidgets.QPushButton(self.centralwidget)
        self.V36_S_close.setGeometry(QtCore.QRect(715, 726, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V36_S_close.setFont(font)
        self.V36_S_close.setObjectName("V36_SB_close")
        self.V36_S_close.setStyleSheet("QPushButton { background-color: red; color: white; }" "QPushButton:pressed { background-color: #4d0505; }")
        self.V36_S_close.clicked.connect(lambda: self.close_valve(b"V36_close\n"))
        self.V36_S_state = QtWidgets.QLabel(self.centralwidget)
        self.V36_S_state.setGeometry(QtCore.QRect(715, 754, 71, 21))
        font.setFamily("Helvetica")
        font.setPointSize(24)
        self.V36_S_state.setFont(font)
        self.V36_S_state.setAlignment(QtCore.Qt.AlignCenter)
        self.V36_S_state.setObjectName("Current State")
        self.V36_S_state.setStyleSheet("color: blue; font-size: 16px;") 


        self.V37_SB_open = QtWidgets.QPushButton(self.centralwidget)
        self.V37_SB_open.setGeometry(QtCore.QRect(825, 680, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V37_SB_open.setFont(font)
        self.V37_SB_open.setObjectName("V37_SB_open")
        self.V37_SB_open.setStyleSheet("QPushButton { background-color: #12b81b; color: white; }" "QPushButton:pressed { background-color: #074d05; }")
        self.V37_SB_open.clicked.connect(lambda: self.open_valve(b"V37_open\n"))
        self.V37_SB_close = QtWidgets.QPushButton(self.centralwidget)
        self.V37_SB_close.setGeometry(QtCore.QRect(825, 704, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V37_SB_close.setFont(font)
        self.V37_SB_close.setObjectName("V37_SB_close")
        self.V37_SB_close.setStyleSheet("QPushButton { background-color: red; color: white; }" "QPushButton:pressed { background-color: #4d0505; }")
        self.V37_SB_close.clicked.connect(lambda: self.close_valve(b"V37_close\n"))
        self.V37_SB_state = QtWidgets.QLabel(self.centralwidget)
        self.V37_SB_state.setGeometry(QtCore.QRect(825, 730, 71, 21))
        font.setFamily("Helvetica")
        font.setPointSize(24)
        self.V37_SB_state.setFont(font)
        self.V37_SB_state.setAlignment(QtCore.Qt.AlignCenter)
        self.V37_SB_state.setObjectName("Current State")
        self.V37_SB_state.setStyleSheet("color: blue; font-size: 16px;") 

        self.V38_S_NO_open = QtWidgets.QPushButton(self.centralwidget)
        self.V38_S_NO_open.setGeometry(QtCore.QRect(928, 738, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V38_S_NO_open.setFont(font)
        self.V38_S_NO_open.setObjectName("V38_S_NO_open")
        self.V38_S_NO_open.setStyleSheet("QPushButton { background-color: #12b81b; color: white; }" "QPushButton:pressed { background-color: #074d05; }")
        self.V38_S_NO_open.clicked.connect(lambda: self.open_valve(b"V38_NO_open\n"))
        self.V38_S_NO_close = QtWidgets.QPushButton(self.centralwidget)
        self.V38_S_NO_close.setGeometry(QtCore.QRect(928, 762, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        self.V38_S_NO_close.setFont(font)
        self.V38_S_NO_close.setObjectName("V38_S_NO_close")
        self.V38_S_NO_close.setStyleSheet("QPushButton { background-color: red; color: white; }" "QPushButton:pressed { background-color: #4d0505; }")
        self.V38_S_NO_close.clicked.connect(lambda: self.close_valve(b"V38_NO_close\n"))
        self.V38_S_state = QtWidgets.QLabel(self.centralwidget)
        self.V38_S_state.setGeometry(QtCore.QRect(930, 790, 71, 21))
        font.setFamily("Helvetica")
        font.setPointSize(24)
        self.V38_S_state.setFont(font)
        self.V38_S_state.setAlignment(QtCore.Qt.AlignCenter)
        self.V38_S_state.setObjectName("Current State")
        self.V38_S_state.setStyleSheet("color: blue; font-size: 16px;") 


        

        self.P10 = LinearGauge(self.centralwidget)
        self.P10.setGeometry(QtCore.QRect(170, 309, 100, 60))
        self.P10.setObjectName("P10")
        





        self.P20 = LinearGauge(self.centralwidget)
        self.P20.setGeometry(QtCore.QRect(1270, 195, 100, 60))
        self.P20.setObjectName("P20")

        self.P21 = LinearGauge(self.centralwidget)
        self.P21.setGeometry(QtCore.QRect(925, 295, 100, 60))
        self.P21.setObjectName("P21")

        self.P22 = LinearGauge(self.centralwidget)
        self.P22.setGeometry(QtCore.QRect(1078, 269, 100, 60))
        self.P22.setObjectName("P22")

      
        

        self.P30 = LinearGauge(self.centralwidget)
        self.P30.setGeometry(QtCore.QRect(1288, 498, 100, 60))
        self.P30.setObjectName("P30")

        self.P31 = LinearGauge(self.centralwidget)
        self.P31.setGeometry(QtCore.QRect(925, 453, 100, 60))
        self.P31.setObjectName("P31")

        self.P32 = LinearGauge(self.centralwidget)
        self.P32.setGeometry(QtCore.QRect(1033, 385, 100, 60))
        self.P32.setObjectName("P32")


        self.T2_ETH_RUN = VerticalTempLinearGauge(self.centralwidget)
        self.T2_ETH_RUN.setGeometry(QtCore.QRect(804, 270, 60, 100))
        self.T2_ETH_RUN.setObjectName("T2 ETH RUN")
 
        self.T3_N2O_run = VerticalTempLinearGauge(self.centralwidget)
        self.T3_N2O_run.setGeometry(QtCore.QRect(698, 435, 60, 100))
        self.T3_N2O_run.setObjectName("T3 N20 RUN")
 


        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1440, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    # def update_date_time(self): 

    #     #set the current date and time 
    #     current_time = QTime.currentTime().toString(Qt.DefaultLocaleLongDate)
    #     current_date = QDate.currentDate().toString(Qt.DefaultLocaleLongDate)

    #     #update date and time 
    #     self.date_label.setText(current_time)
    #     self.time_label.setText(current_date)



    def pad_state_set(self, button): 
        if(button.isChecked()): 
            print(True)
            button.setText("LOCKDOWN")
            button.setStyleSheet("QPushButton { background-color: red; color: white; } QPushButton:pressed { background-color: red; }")

        else:
            print(False)
            button.setText("SAFE")
            button.setStyleSheet("QPushButton { background-color: grey; color: white; }")


    
    
    
    def power_off_all(self): 
        s.send(b"stop\n")
        
    
    def valve_seq(self):
        s.send(b"seq\n")


    def get_data(self): 
        thread = WorkerThread()
        
    def on_data_ready(self,data):
        try:
                json_str = data
                json_data = json.loads(json_str)
                #print(json_data['lj'])
                p1_val = json_data['lj']['p10val']
                p2_val = json_data['lj']['p21val']
                p3_val = json_data['lj']['p30val']
                

                t2_thermo = json_data['lj']['t2val']
                t3_thermo = json_data['lj']['t3val']

                
  
               
                
                # self.T2_ETH_RUN.setValue(str(t2_thermo))
                # self.T3_N2O_run.setValue(str())

                #self.P21.setValue(int(p1_val))
             
        #         self.P31.setValue(int(p1_val))
                
        

                try:
                    self.P31.setValue(int(p1_val))
                    self.P21.setValue(int(p2_val))
                    self.P10.setValue(int(p3_val))
                    self.T2_ETH_RUN.setValue(int(t2_thermo))
                    self.T3_N2O_run.setValue(int(t3_thermo))
                except ValueError as valueError:
                    pass
                #print(json_data)
        except json.JSONDecodeError as e:
            pass
        





    def receive_until_newline(self):
        data = b''  # Initialize an empty byte string to store the received data

        while True:
            chunk = s.recv(32)  # Receive data in chunks of 1024 bytes
            data += chunk  # Append the received data to the existing data

            if b'\n' in chunk:
                break  # Break the loop when a newline character is received
        #find index of new line
        data = data.decode('utf-8')  # Convert the byte string to a Unicode string
        index = data.index('\n')
        #trunicate
        #print(data[:index]) 
        return data[:index].strip()
        
        

    def update_valve_state(self): 
       
        while True:
            try:
                json_str = self.receive_until_newline()
                json_data = json.loads(json_str)
                # p10_val = json_data['lj']['p10val']

                # #p20_val = json_data['lj']['p20val']
                # p21_val = json_data['lj']['p21val']
                # # p22_val = json_data['lj']['p22val']


                # p30_val = json_data['lj']['p30val']
                # # p31_val = json_data['lj']['p31val']
                # # p32_val = json_data['lj']['p32val']

                v11_s  = json_data['valves']['V11_S']
                v10_sb = json_data['valves']['V10_SB']
                v12_s  = json_data['valves']['V12_S']

                v20_sb = json_data['valves']['V20_SB']
                v21_sb = json_data['valves']['V21_SB']
                v22_sb = json_data['valves']['V22_SB']
                v23_sb = json_data['valves']['V23_SB']

                v30_sb = json_data['valves']['V30_SB']
                v31_sb = json_data['valves']['V31_SB']
                v32_s  = json_data['valves']['V32_S']
                v33_sb = json_data['valves']['V33_SB']
                v34_s  = json_data['valves']['V34_S']
                v35_sb = json_data['valves']['V35_SB']
                v36_s  = json_data['valves']['V36_S']
                v37_sb = json_data['valves']['V37_SB']
                v38_s  = json_data['valves']['V38_S']


                t2_thermo = json_data['lj']['t2val']
                t3_thermo = json_data['lj']['t3val']


                print(json_data)

                
                #updating the pressure gauges
                # self.P10.setValue(int(p10_val))

                # # self.P20.setValue(int(p20_val))
                # self.P21.setValue(int(p21_val))
                # # self.P22.setValue(int(p22_val))

                # self.P30.setValue(int(p30_val))
                # # self.P31.setValue(int(p31_val))
                # self.P32.setValue(int(p32_val))


                #update thermocouples
               
                


                
                
                

                #set valve state
                self.V10_SB_state.setText(self.translateState(str(v10_sb)))
                self.V11_S_NO_state.setText(self.translateState(str(v11_s)))
                self.V12_S_state.setText(self.translateState(str(v12_s)))
                

                self.V20_SB_state.setText(self.translateState(str(v20_sb)))
                self.V21_MB_state.setText(self.translateState(str(v21_sb)))
                self.V22_SB_NO_state.setText(self.translateState(str(v22_sb)))
                self.V23_SB_state.setText(self.translateState(str(v23_sb)))

                self.V30_SB_state.setText(self.translateState(str(v30_sb)))
                self.V31_MB_state.setText(self.translateState(str(v31_sb)))
                self.V32_S_state.setText(self.translateState(str(v32_s)))
                self.V33_SB_NO_state.setText(self.translateState(str(v33_sb)))
                self.V34_S_state.setText(self.translateState(str(v34_s)))
                self.V35_SB_NO_state.setText(self.translateState(str(v35_sb)))
                self.V36_S_state.setText(self.translateState(str(v36_s)))
                self.V37_SB_state.setText(self.translateState(str(v37_sb)))
                self.V38_S_state.setText(self.translateState(str(v38_s)))


                

                valves = json_data['valves']
                # print("P10 Value:", p10_val)
                # print("P20 Value:", p20_val)
                # print("")

                # print("P3 Value:", p3_val)
                # print("Valves:", valves)

            except json.JSONDecodeError:
                pass
                
    def translateState(self, string):
        if string == "False": 
            field = "Closed"
            return(field)
        elif string == "True": 
            field = "Open"
            return(field)


    def connect(self): 
        global s 
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) #tcp socket

        try: 
            s.connect(("127.0.0.1", PORT)) #connect to mini server
            print("connected")
            self.thread = WorkerThread()         #make instance of working class
            self.thread.json_data_rec.connect(self.on_data_ready)        #tie func to working class
            self.thread.start()                                    #start thread
            print('thread started')

        except Exception as e  : 
            print(str(e))
            print("ERR MSG: If connection is refused, either port or socket is wrong")
    #        s.close()
    #        sys.exit(1)

    def open_valve(self,name): 
        s.send(name)
  
    def close_valve(self,name): 
        s.send(name)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        # self.time_label.setText(_translate("MainWindow", "TextLabel"))
        # self.date_label.setText(_translate("MainWindow", "TextLabel"))

        self.pwr_off.setText(_translate("MainWindow", "PWR OFF"))
        self.start_valve_seq.setText(_translate("MainWindow","VALVE SEQ"))
        # self.close_all.setText(_translate("MainWindow", "PWR OFF ALL"))

        
        self.pad_s.setText(_translate("MainWinsow", "SAFE"))

        self.stack_light_blue.setText(_translate("MainWindow", ""))
        self.stack_light_green.setText(_translate("MainWindow", ""))
        self.stack_light_yellow.setText(_translate("MainWindow", ""))
    


        self.V10_SB_open.setText(_translate("MainWindow", "OPEN"))
        self.V10_SB_close.setText(_translate("MainWindow", "CLOSE"))
        self.V10_SB_state.setText(_translate("MainWindow", "STATE"))
    
        self.V11_S_NO_open.setText(_translate("MainWindow", "OPEN"))
        self.V11_S_NO_close.setText(_translate("MainWindow", "CLOSE"))
        self.V11_S_NO_state.setText(_translate("MainWindow", "STATE"))

        self.V12_S_NO_open.setText(_translate("MainWindow", "OPEN"))
        self.V12_S_NO_close.setText(_translate("MainWindow", "CLOSE"))     
        self.V12_S_state.setText(_translate("MainWindow", "STATE"))

        self.V20_SB_open.setText(_translate("MainWindow", "OPEN"))
        self.V20_SB_close.setText(_translate("MainWindow", "CLOSE"))
        self.V20_SB_state.setText(_translate("MainWindow", "STATE"))

        self.V21_MB_open.setText(_translate("MainWindow", "OPEN"))
        self.V21_MB_close.setText(_translate("MainWindow", "CLOSE"))
        self.V21_MB_state.setText(_translate("MainWindow", "STATE"))

        self.V22_SB_NO_open.setText(_translate("MainWindow", "OPEN"))
        self.V22_SB_NO_close.setText(_translate("MainWindow", "CLOSE"))  
        self.V22_SB_NO_state.setText(_translate("MainWindow", "STATE"))

        self.V23_SB_NO_open.setText(_translate("MainWindow", "OPEN"))
        self.V23_SB_NO_close.setText(_translate("MainWindow", "CLOSE"))
        self.V23_SB_state.setText(_translate("MainWindow", "STATE"))

        self.V30_SB_open.setText(_translate("MainWindow", "OPEN"))
        self.V30_SB_close.setText(_translate("MainWindow", "CLOSE"))
        self.V30_SB_state.setText(_translate("MainWindow", "STATE"))

        self.V31_MB_open.setText(_translate("MainWindow", "OPEN"))
        self.V31_MB_close.setText(_translate("MainWindow", "CLOSE"))
        self.V31_MB_state.setText(_translate("MainWindow", "STATE"))


        self.V32_S_open.setText(_translate("MainWindow", "OPEN"))
        self.V32_S_close.setText(_translate("MainWindow", "CLOSE"))
        self.V32_S_state.setText(_translate("MainWindow", "STATE"))


        self.V33_SB_NO_open.setText(_translate("MainWindow", "OPEN"))
        self.V33_SB_NO_close.setText(_translate("MainWindow", "CLOSE"))
        self.V33_SB_NO_state.setText(_translate("MainWindow", "STATE"))


        self.V34_S_open.setText(_translate("MainWindow", "OPEN"))
        self.V34_S_close.setText(_translate("MainWindow", "CLOSE"))
        self.V34_S_state.setText(_translate("MainWindow", "STATE"))

        self.V35_SB_NO_open.setText(_translate("MainWindow", "OPEN"))
        self.V35_SB_NO_close.setText(_translate("MainWindow", "CLOSE"))
        self.V35_SB_NO_state.setText(_translate("MainWindow", "STATE"))

        self.V36_S_open.setText(_translate("MainWindow", "OPEN"))
        self.V36_S_close.setText(_translate("MainWindow", "CLOSE"))
        self.V36_S_state.setText(_translate("MainWindow", "STATE"))

        self.V37_SB_open.setText(_translate("MainWindow", "OPEN"))
        self.V37_SB_close.setText(_translate("MainWindow", "CLOSE"))
        self.V37_SB_state.setText(_translate("MainWindow", "STATE"))

        self.V38_S_NO_open.setText(_translate("MainWindow", "OPEN"))
        self.V38_S_NO_close.setText(_translate("MainWindow", "CLOSE"))
        self.V38_S_state.setText(_translate("MainWindow", "STATE"))


        


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow(MainWindow)
    ui.connect()

    #update_thread = threading.Thread(target=ui.update_valve_state, daemon=True)
    #update_thread.start()
    #ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

